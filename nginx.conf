events {
    worker_connections 1024;
}

http {
    upstream tiktok_bot {
        server tiktok-bot:5000;
    }

    # Rate limiting
    limit_req_zone $binary_remote_addr zone=bot_limit:10m rate=10r/s;

    server {
        listen 80;
        server_name _;

        # Redirect HTTP to HTTPS (uncomment in production with SSL)
        # return 301 https://$server_name$request_uri;

        # For development without SSL, proxy directly
        location / {
            limit_req zone=bot_limit burst=20 nodelay;
            
            proxy_pass http://tiktok_bot;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Timeouts
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
            
            # WebSocket support
            proxy_buffering off;
        }

        # Static files caching
        location /static/ {
            proxy_pass http://tiktok_bot;
            expires 7d;
            add_header Cache-Control "public, immutable";
        }
    }

    # HTTPS configuration (uncomment and configure for production)
    # server {
    #     listen 443 ssl http2;
    #     server_name your-domain.com;
    #
    #     ssl_certificate /etc/nginx/ssl/cert.pem;
    #     ssl_certificate_key /etc/nginx/ssl/key.pem;
    #     ssl_protocols TLSv1.2 TLSv1.3;
    #     ssl_ciphers HIGH:!aNULL:!MD5;
    #
    #     location / {
    #         limit_req zone=bot_limit burst=20 nodelay;
    #         proxy_pass http://tiktok_bot;
    #         # ... same proxy settings as above
    #     }
    # }
}
